rawdatasets <- 'https://api.neotomadb.org/v2.0/data/datasets/'
rawdownload <- 'https://api.neotomadb.org/v2.0/data/downloads'
pollends <- httr::GET(rawdatasets, query = list(datasettype = 'pollen',
limit = 99999,
offset = 0))
datasets <- content(pollends)$data
allds <- datasets %>% map(function(x) {
datasetids = x$sites$datasets %>%
map(function(x) {
data.frame(dsid = x$datasetid,
dstype = x$datasettype)
}) %>%
bind_rows()
return(datasetids)
}) %>%
bind_rows() %>%
filter(dstype == 'pollen') # just incase.
downloads <- allds$dsid %>% map(function(x) {
res <- httr::GET(paste0(rawdownload, '/', x))
if (res$status_code == 200) {
output <- content(res)$data[[1]]$record
} else {
output <- NULL
}
return(output)
})
library(neotoma)
?get_dataset
location <- c(-180, -20, 180, 20)
location <- c(-180, -20, 180, 20)
#c(-130, 24, -34, 65)
#c(-11, 35, 47, 72)
#c(105, -51, 177, 10)
age.young <- -500
age.old <- 23000
get_dataset(datasettype = "pollen",
loc = location,
ageyoung = age.young,
ageold = age.old)
location <- c(-179.9, -20, 179.9, 20)
#c(-130, 24, -34, 65)
#c(-11, 35, 47, 72)
#c(105, -51, 177, 10)
age.young <- -500
age.old <- 23000
get_dataset(datasettype = "pollen",
loc = location,
ageyoung = age.young,
ageold = age.old)
datasets <- get_dataset(datasettype = "pollen",
loc = location,
ageyoung = age.young,
ageold = age.old)
tropdown <- get_download(datasets)
View(tropdown)
tropcomp <- neotoma::compile_downloads(tropdown)
View(tropcomp)
View(tropcomp)
length(tropdown)
i=1
tropinfo <- data.frame()
tropinfo$dataset.id[i] <- tropdown[[i]]$dataset$dataset.meta$dataset.id
tropdown[[i]]$dataset$dataset.meta$dataset.id
tropinfo$dataset.id[i]
tropinfo$dataset.id
tropinfo$dataset.id <- tropdown[[i]]$dataset$dataset.meta$dataset.id
tropinfo <- data.frame(matrix(data = NA, nrow = 200, ncol = 1))
tropinfo$dataset.id <- tropdown[[i]]$dataset$dataset.meta$dataset.id
tropinfo$dataset.id[i] <- tropdown[[i]]$dataset$dataset.meta$dataset.id
View(tropinfo)
tropinfo <- data.frame(matrix(data = NA, nrow = 200, ncol = 1))
tropinfo$dataset.id[i] <- tropdown[[i]]$dataset$dataset.meta$dataset.id
View(tropinfo)
i = 2
tropinfo$dataset.id[i] <- tropdown[[i]]$dataset$dataset.meta$dataset.id
tropinfo$elev[i] <- tropdown[[1]]$dataset$site.data$elev
tropinfo <- data.frame(matrix(data = NA, nrow = 200, ncol = 0))
tropinfo$dataset.id[i] <- tropdown[[i]]$dataset$dataset.meta$dataset.id
tropinfo <- data.frame(matrix(data = NA, nrow = 200, ncol = 0))
View(tropcomp)
View(tropcomp)
tropdown[[i]]$chronologies
tropdown[[i]]$chronologies)
length(tropdown[[i]]$chronologies)
j=1
neotoma::ages(tropdown)
tropage <- neotoma::ages(tropdown)
View(tropage)
tropage[[i]]$age.type
View(tropdown)
neotoma::get_chroncontrol(17)
neotoma::get_chroncontrol(348)
neotoma::get_geochron(348)
neotoma::get_geochron(17)
neotoma::get_geochron(8)
get_geochron(348)
get_chroncontrol(8)
get_chroncontrol(348)
for (i in length(tropdown)) {
tropinfo$dataset.id[i] <- tropdown[[i]]$dataset$dataset.meta$dataset.id
tropinfo$age.type[i] <- tropage[[i]]$age.type[1]
tropinfo$chron.control[i] <- get_chroncontrol(i)
tropinfo$samples[i] <- length(tropdown[[i]]$sample.meta$sample.id)
tropinfo$elev[i] <- tropdown[[1]]$dataset$site.data$elev
tropinfo$lat[i] <- tropdown[[1]]$dataset$site.data$lat
tropinfo$long[i] <- tropdown[[1]]$dataset$site.data$long
}
get_chroncontrol(i)
t <- get_chroncontrol(i)
View(t)
t$chron.control$control.type == 'Radiocarbon'
isTRUE(t$chron.control$control.type == 'Radiocarbon')
t$chron.control$control.type[t$chron.control$control.type == 'Radiocarbon']
t <- get_chroncontrol(1654)
t <- get_chroncontrol(1654)
t$chron.control$control.type[t$chron.control$control.type == 'Radiocarbon']
View(t)
t <- get_chroncontrol(1654)
t$chron.control$control.type[t$chron.control$control.type == 'Radiocarbon']
tropinfo <- data.frame(matrix(data = NA, nrow = 200, ncol = 0))
for (i in length(tropdown)) {
tropinfo$dataset.id[i] <- tropdown[[i]]$dataset$dataset.meta$dataset.id
tropinfo$age.type[i] <- tropage[[i]]$age.type[1]
# tropinfo$chron.control[i] <- get_chroncontrol(i)
tropinfo$samples[i] <- length(tropdown[[i]]$sample.meta$sample.id)
tropinfo$elev[i] <- tropdown[[1]]$dataset$site.data$elev
tropinfo$lat[i] <- tropdown[[1]]$dataset$site.data$lat
tropinfo$long[i] <- tropdown[[1]]$dataset$site.data$long
}
View(tropinfo)
tropinfo$dataset.id[i] <- tropdown[[i]]$dataset$dataset.meta$dataset.id
tropinfo$age.type[i] <- tropage[[i]]$age.type[1]
# tropinfo$chron.control[i] <- get_chroncontrol(i)
tropinfo$samples[i] <- length(tropdown[[i]]$sample.meta$sample.id)
tropinfo$elev[i] <- tropdown[[1]]$dataset$site.data$elev
tropinfo$lat[i] <- tropdown[[1]]$dataset$site.data$lat
tropage[[i]]$age.type
tropage[[i]]$age.type[1]
tropinfo <- data.frame(matrix(data = NA, nrow = 200, ncol = 0))
for (i in length(tropdown)) {
tropinfo$dataset.id[i] <- tropdown[[i]]$dataset$dataset.meta$dataset.id
tropinfo$age.type[i] <- tropage[[i]]$age.type[1]
# tropinfo$chron.control[i] <- get_chroncontrol(i)
tropinfo$samples[i] <- length(tropdown[[i]]$sample.meta$sample.id)
tropinfo$elev[i] <- tropdown[[1]]$dataset$site.data$elev
tropinfo$lat[i] <- tropdown[[1]]$dataset$site.data$lat
tropinfo$long[i] <- tropdown[[1]]$dataset$site.data$long
}
i  = 1
tropinfo$dataset.id[i] <- tropdown[[i]]$dataset$dataset.meta$dataset.id
tropinfo$age.type[i] <- tropage[[i]]$age.type[1]
# tropinfo$chron.control[i] <- get_chroncontrol(i)
tropinfo$samples[i] <- length(tropdown[[i]]$sample.meta$sample.id)
tropinfo$elev[i] <- tropdown[[1]]$dataset$site.data$elev
tropinfo$lat[i] <- tropdown[[1]]$dataset$site.data$lat
tropinfo$long[i] <- tropdown[[1]]$dataset$site.data$long
View(tropinfo)
i = 2
tropinfo$dataset.id[i] <- tropdown[[i]]$dataset$dataset.meta$dataset.id
tropinfo$age.type[i] <- tropage[[i]]$age.type[1]
# tropinfo$chron.control[i] <- get_chroncontrol(i)
tropinfo$samples[i] <- length(tropdown[[i]]$sample.meta$sample.id)
tropinfo$elev[i] <- tropdown[[1]]$dataset$site.data$elev
tropinfo$lat[i] <- tropdown[[1]]$dataset$site.data$lat
tropinfo$long[i] <- tropdown[[1]]$dataset$site.data$long
i in length(tropdown)
length(tropdown)
tropinfo <- data.frame(matrix(data = NA, nrow = 200, ncol = 0))
for (i in 1:length(tropdown)) {
tropinfo$dataset.id[i] <- tropdown[[i]]$dataset$dataset.meta$dataset.id
tropinfo$age.type[i] <- tropage[[i]]$age.type[1]
# tropinfo$chron.control[i] <- get_chroncontrol(i)
tropinfo$samples[i] <- length(tropdown[[i]]$sample.meta$sample.id)
tropinfo$elev[i] <- tropdown[[1]]$dataset$site.data$elev
tropinfo$lat[i] <- tropdown[[1]]$dataset$site.data$lat
tropinfo$long[i] <- tropdown[[1]]$dataset$site.data$long
}
tropinfo <- data.frame(matrix(data = NA, nrow = 200, ncol = 0))
for (i in 1:length(tropdown)) {
tropinfo$dataset.id[i] <- tropdown[[i]]$dataset$dataset.meta$dataset.id
tropinfo$age.type[i] <- tropage[[i]]$age.type[1]
# tropinfo$chron.control[i] <- get_chroncontrol(i)
tropinfo$samples[i] <- length(tropdown[[i]]$sample.meta$sample.id)
tropinfo$elev[i] <- tropdown[[i]]$dataset$site.data$elev
tropinfo$lat[i] <- tropdown[[i]]$dataset$site.data$lat
tropinfo$long[i] <- tropdown[[i]]$dataset$site.data$long
}
ggplot(data = world) +
geom_sf()
library(ggplot2)
ggplot(data = world) +
geom_sf()
library("rnaturalearth")
library(rnaturalearth)
install.packages("rnaturalearth")
library(rnaturalearth)
world <- ne_countries(scale = "medium", returnclass = "sf")
install.packages("rnaturalearthdata")
library(rnaturalearthdata)
world <- ne_countries(scale = "medium", returnclass = "sf")
install.packages(c("cowplot", "googleway", "ggrepel",
"ggspatial", "libwgeom", "sf")
)
install.packages(c("cowplot", "googleway", "ggrepel", "ggspatial", "libwgeom", "sf"))
world <- ne_countries(scale = "medium", returnclass = "sf")
library(sf)
theme_set(theme_bw())
library(jsonlite)
library(httr)
library(dplyr)
library(purrr)
library(ggplot2)
library(rnaturalearth)
library(rnaturalearthdata)
library(sf)
theme_set(theme_bw())
world <- ne_countries(scale = "medium", returnclass = "sf")
install.packages("rgeos")
world <- ne_countries(scale = "medium", returnclass = "sf")
ggplot(data = world) +
geom_sf()
points(x = tropinfo$lat, y = tropinfo$long)
plot(worldmap, col = "lightgrey",
fill = T, border = "darkgray",
xlim = c(-180, 180), ylim = c(-90, 90),
bg = "aliceblue",
asp = 1, wrap=c(-180,180))
points(x = tropinfo$lat, y = tropinfo$long)
# get map
worldmap <- getMap(resolution = "coarse")
# load library
library(rworldmap)
install.packages("rworldmap")
# load library
library(rworldmap)
# get map
worldmap <- getMap(resolution = "coarse")
# plot world map
plot(worldmap, col = "lightgrey",
fill = T, border = "darkgray",
xlim = c(-180, 180), ylim = c(-90, 90),
bg = "aliceblue",
asp = 1, wrap=c(-180,180))
plot(worldmap, col = "lightgrey",
fill = T, border = "darkgray",
xlim = c(-180, 180), ylim = c(-90, 90),
bg = "aliceblue",
asp = 1, wrap=c(-180,180))
points(x = tropinfo$lat, y = tropinfo$long)
plot(worldmap, col = "lightgrey",
fill = T, border = "darkgray",
xlim = c(-180, 180), ylim = c(-90, 90),
bg = "aliceblue",
asp = 1, wrap=c(-180,180))
points(x = tropinfo$long, y = tropinfo$lat)
plot(worldmap, col = "lightgrey",
fill = T, border = "darkgray",
xlim = c(-180, 180), ylim = c(-30, 30),
bg = "aliceblue",
asp = 1, wrap=c(-180,180))
points(x = tropinfo$long, y = tropinfo$lat)
plot(worldmap, col = "lightgrey",
fill = T, border = "darkgray",
xlim = c(-180, 180), ylim = c(-30, 30),
bg = "aliceblue"#,
# asp = 1, wrap=c(-180,180)
)
View(worldmap)
ggplot(data = world) +
geom_sf() +
geom_point(data = tropinfo, mapping = aes(x = long, y = lat), color = "red")
world <- ne_countries(scale = "medium", returnclass = "sf")
ggplot(data = world) +
geom_sf() +
geom_point(data = tropinfo, mapping = aes(x = long, y = lat), color = "red") +
coord_quickmap()
ggplot(data = world) +
geom_point(data = tropinfo, mapping = aes(x = long, y = lat), color = "red") +
coord_quickmap()
ggplot(data = world) +
geom_sf() +
geom_point(data = tropinfo, mapping = aes(x = long, y = lat), color = "red") +
coord_sf()
ggplot(data = world) +
geom_point(data = tropinfo, mapping = aes(x = long, y = lat), color = "red") +
geom_sf() +
coord_sf()
ggplot(data = world) +
geom_sf() +
geom_point(data = tropinfo, mapping = aes(x = long, y = lat), color = "red") +
coord_sf()
ggplot(data = world) +
geom_sf() +
geom_point(data = tropinfo, mapping = aes(x = long, y = lat), color = "red") +
coord_sf(xlim = c(-20,20))
ggplot(data = world) +
geom_sf() +
geom_point(data = tropinfo, mapping = aes(x = long, y = lat), color = "red") +
coord_sf(ylim = c(-20,20))
ggplot(data = world) +
geom_sf() +
geom_point(data = tropinfo, mapping = aes(x = long, y = lat), color = "red") +
coord_sf(ylim = c(-25,25))
ggplot(data = world) +
geom_sf() +
geom_point(data = tropinfo, mapping = aes(x = long, y = lat), color = "red", shape = 1) +
coord_sf(ylim = c(-25,25))
View(tropdown)
tropdown[[i]]$sample.meta$age
tropdown[[i]]$sample.meta$age[length(tropdown[[i]]$sample.meta$age)]
tropinfo <- data.frame(matrix(data = NA, nrow = 200, ncol = 0))
for (i in 1:length(tropdown)) {
tropinfo$dataset.id[i] <- tropdown[[i]]$dataset$dataset.meta$dataset.id
tropinfo$age.type[i] <- tropage[[i]]$age.type[1]
# tropinfo$chron.control[i] <- get_chroncontrol(i)
tropinfo$samples[i] <- length(tropdown[[i]]$sample.meta$sample.id)
tropinfo$elev[i] <- tropdown[[i]]$dataset$site.data$elev
tropinfo$lat[i] <- tropdown[[i]]$dataset$site.data$lat
tropinfo$long[i] <- tropdown[[i]]$dataset$site.data$long
tropinfo$oldest[i] <- tropdown[[i]]$sample.meta$age[length(tropdown[[i]]$sample.meta$age)]
tropinfo$youngest[i] <- tropdown[[i]]$sample.meta$age[1]
}
View(tropinfo)
pollends <- httr::GET(rawdatasets, query = list(datasettype = 'pollen',
# limit = 99999,
offset = 0))
pollends <- httr::GET(rawdatasets, query = list(datasettype = 'pollen',
limit = 99999,
offset = 0))
datasets <- content(pollends)$data
allds <- datasets %>% map(function(x) {
datasetids = x$sites$datasets %>%
map(function(x) {
data.frame(dsid = x$datasetid,
dstype = x$datasettype)
}) %>%
bind_rows()
return(datasetids)
}) %>%
bind_rows() %>%
filter(dstype == 'pollen') # just incase.
downloads <- allds$dsid[1:200] %>% map(function(x) {
res <- httr::GET(paste0(rawdownload, '/', x))
if (res$status_code == 200) {
output <- content(res)$data[[1]]$record
} else {
output <- NULL
}
return(output)
})
allds$dsid[1:2]
downloads <- allds$dsid[1:2] %>% map(function(x) {
res <- httr::GET(paste0(rawdownload, '/', x))
if (res$status_code == 200) {
output <- content(res)$data[[1]]$record
} else {
output <- NULL
}
return(output)
})
View(downloads)
write.csv(final_output, file = "~/GoogleDrive_UW-Madison/PhD Research/tropics_oldNeotoma.csv")
write.csv(tropinfo, file = "~/GoogleDrive_UW-Madison/PhD Research/tropics_oldNeotoma.csv")
library(jsonlite)
library(httr)
library(dplyr)
library(purrr)
library(ggplot2)
library(rnaturalearth)
library(rnaturalearthdata)
library(sf)
location <- c(-179.9, -20, 179.9, 20)
#c(-130, 24, -34, 65)
#c(-11, 35, 47, 72)
#c(105, -51, 177, 10)
age.young <- -500
rawdatasets <- 'https://api.neotomadb.org/v2.0/data/datasets/'
rawdownload <- 'https://api.neotomadb.org/v2.0/data/downloads'
# pollenloc <- 'BBOX(-180,-20,180,20)'
pollends <- httr::GET(rawdatasets, query = list(datasettype = 'pollen',
limit = 99999,
offset = 0))
datasets <- content(pollends)$data
allds <- datasets %>% map(function(x) {
datasetids = x$sites$datasets %>%
map(function(x) {
data.frame(dsid = x$datasetid,
dstype = x$datasettype)
}) %>%
bind_rows()
return(datasetids)
}) %>%
bind_rows() %>%
filter(dstype == 'pollen') # just in case.
end = 0
start = i + end
i+=1
end = 0
i=1
start = i + end
end = start+99
current.downloads <- allds$dsid[start:end] %>% map(function(x) {
res <- httr::GET(paste0(rawdownload, '/', x))
if (res$status_code == 200) {
output <- content(res)$data[[1]]$record
} else {
output <- NULL
}
return(output)
})
start = i + end
end = start+99
all.downloads <- list()
all.downloads <- append(all.downloads,current.downloads)
all.downloads <- append(all.downloads,current.downloads)
i=1
end = 0
all.downloads <- list()
for (i in 1:49){
start = i + end
end = start+99
if (i == 49) {
end = 4822
}
current.downloads <- allds$dsid[start:end] %>% map(function(x) {
res <- httr::GET(paste0(rawdownload, '/', x))
if (res$status_code == 200) {
output <- content(res)$data[[1]]$record
} else {
output <- NULL
}
return(output)
})
all.downloads <- append(all.downloads,current.downloads)
}
all.downloads <- load("~/GoogleDrive_UW-Madison/PhD Research/downloads1230.RData")
all.downloads <- load("~/GoogleDrive_UW-Madison/PhD Research/downloads1360.RData")
all.downloads <- load("~/GoogleDrive_UW-Madison/PhD Research/downloads1360.RDS")
taxa <- c('Alnus', 'Ambrosia', 'Cyperaceae', 'Fagus', 'Picea', 'Pinus', 'Poaceae', 'Quercus', 'Tsuga', 'Ulmus') # North America
# Set your taxa, location, and time period of interest
location <-
c(-130, 24, -34, 65) # North America
age_young <- 0
age_old <- 21000
taxa <- c('Alnus', 'Ambrosia', 'Cyperaceae')#, #'Fagus', 'Picea', 'Pinus', 'Poaceae', 'Quercus', 'Tsuga', 'Ulmus') # North America
taxa_datasets <- list()
dataset_types <- c("pollen", "pollen surface sample")
# Get dataset information for all taxa
for (i in 1:length(taxa)) {
for (j in 1:length(dataset_types)){
current_type <- dataset_types[j]
current_datasets <- get_dataset(
datasettype = "pollen",
taxonname = paste0(taxa[i], "*"),
loc = location,
ageyoung = age.young,
ageold = age.old
)
taxa_datasets <- append(taxa_datasets, current_datasets)
}
}
library(neotoma)
library(dplyr)
library(httr)
library(devtools)
# library(rCartoAPI)
# Get dataset information for all taxa
for (i in 1:length(taxa)) {
for (j in 1:length(dataset_types)){
current_type <- dataset_types[j]
current_datasets <- get_dataset(
datasettype = "pollen",
taxonname = paste0(taxa[i], "*"),
loc = location,
ageyoung = age.young,
ageold = age.old
)
taxa_datasets <- append(taxa_datasets, current_datasets)
}
}
# Get dataset information for all taxa
for (i in 1:length(taxa)) {
for (j in 1:length(dataset_types)){
current_type <- dataset_types[j]
current_datasets <- get_dataset(
datasettype = "pollen",
taxonname = paste0(taxa[i], "*"),
loc = location,
ageyoung = age_young,
ageold = age_old
)
taxa_datasets <- append(taxa_datasets, current_datasets)
}
}
i = 1
j = 1
current_type <- dataset_types[j]
# Get dataset information for all taxa
for (i in 1:length(taxa)) {
for (j in 1:length(dataset_types)){
current_type <- dataset_types[j]
current_datasets <- get_dataset(
datasettype = current_type,
taxonname = paste0(taxa[i], "*"),
loc = location,
ageyoung = age_young,
ageold = age_old
)
taxa_datasets <- append(taxa_datasets, current_datasets)
}
}
interp_dl[,i+4]
